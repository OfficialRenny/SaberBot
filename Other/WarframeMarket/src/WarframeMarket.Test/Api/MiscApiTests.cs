/*
 * Warframe.market API
 *
 * ## Documentation is under very slow and heavy development  This document will gradually be supplemented and updated over some extended period of time.  ## Unstable endpoints Endpoint that is not stable and probably will be changed in the future will be marked with exclamation sign -> âš  
 *
 * The version of the OpenAPI document: 1.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using WarframeMarket.Client;
using WarframeMarket.Api;
// uncomment below to import models
//using WarframeMarket.Model;

namespace WarframeMarket.Test.Api
{
    /// <summary>
    ///  Class for testing MiscApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MiscApiTests : IDisposable
    {
        private MiscApi instance;

        public MiscApiTests()
        {
            instance = new MiscApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MiscApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MiscApi
            //Assert.IsType<MiscApi>(instance);
        }

        /// <summary>
        /// Test LocationsGet
        /// </summary>
        [Fact]
        public void LocationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string language = null;
            //var response = instance.LocationsGet(language);
            //Assert.IsType<LocationsGet200Response>(response);
        }

        /// <summary>
        /// Test MissionsGet
        /// </summary>
        [Fact]
        public void MissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string language = null;
            //var response = instance.MissionsGet(language);
            //Assert.IsType<MissionsGet200Response>(response);
        }

        /// <summary>
        /// Test NpcGet
        /// </summary>
        [Fact]
        public void NpcGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string language = null;
            //var response = instance.NpcGet(language);
            //Assert.IsType<NpcGet200Response>(response);
        }
    }
}
