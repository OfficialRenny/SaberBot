/*
 * Warframe.market API
 *
 * ## Documentation is under very slow and heavy development  This document will gradually be supplemented and updated over some extended period of time.  ## Unstable endpoints Endpoint that is not stable and probably will be changed in the future will be marked with exclamation sign -> âš  
 *
 * The version of the OpenAPI document: 1.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using WarframeMarket.Client;
using WarframeMarket.Api;
// uncomment below to import models
//using WarframeMarket.Model;

namespace WarframeMarket.Test.Api
{
    /// <summary>
    ///  Class for testing AuctionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuctionsApiTests : IDisposable
    {
        private AuctionsApi instance;

        public AuctionsApiTests()
        {
            instance = new AuctionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuctionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuctionsApi
            //Assert.IsType<AuctionsApi>(instance);
        }

        /// <summary>
        /// Test AuctionsCreatePost
        /// </summary>
        [Fact]
        public void AuctionsCreatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AuctionsCreatePostRequest auctionsCreatePostRequest = null;
            //var response = instance.AuctionsCreatePost(auctionsCreatePostRequest);
            //Assert.IsType<AuctionsCreatePost200Response>(response);
        }

        /// <summary>
        /// Test AuctionsSearchtypelichGet
        /// </summary>
        [Fact]
        public void AuctionsSearchtypelichGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string platform = null;
            //string buyoutPolicy = null;
            //string weaponUrlName = null;
            //Element? element = null;
            //bool? ephemera = null;
            //int? damageMin = null;
            //int? damageMax = null;
            //string quirk = null;
            //string sortBy = null;
            //var response = instance.AuctionsSearchtypelichGet(platform, buyoutPolicy, weaponUrlName, element, ephemera, damageMin, damageMax, quirk, sortBy);
            //Assert.IsType<AuctionsSearchTypeRivenGet200Response>(response);
        }

        /// <summary>
        /// Test AuctionsSearchtyperivenGet
        /// </summary>
        [Fact]
        public void AuctionsSearchtyperivenGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string platform = null;
            //string buyoutPolicy = null;
            //string weaponUrlName = null;
            //string positiveStats = null;
            //string negativeStats = null;
            //string operation = null;
            //int? masteryRankMin = null;
            //int? masteryRankMax = null;
            //int? reRollsMin = null;
            //int? reRollsMax = null;
            //string modRank = null;
            //string polarity = null;
            //string sortBy = null;
            //var response = instance.AuctionsSearchtyperivenGet(platform, buyoutPolicy, weaponUrlName, positiveStats, negativeStats, operation, masteryRankMin, masteryRankMax, reRollsMin, reRollsMax, modRank, polarity, sortBy);
            //Assert.IsType<AuctionsSearchTypeRivenGet200Response>(response);
        }
    }
}
