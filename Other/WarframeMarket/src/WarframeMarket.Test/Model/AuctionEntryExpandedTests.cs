/*
 * Warframe.market API
 *
 * ## Documentation is under very slow and heavy development  This document will gradually be supplemented and updated over some extended period of time.  ## Unstable endpoints Endpoint that is not stable and probably will be changed in the future will be marked with exclamation sign -> âš  
 *
 * The version of the OpenAPI document: 1.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using WarframeMarket.Model;
using WarframeMarket.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace WarframeMarket.Test.Model
{
    /// <summary>
    ///  Class for testing AuctionEntryExpanded
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AuctionEntryExpandedTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AuctionEntryExpanded
        //private AuctionEntryExpanded instance;

        public AuctionEntryExpandedTests()
        {
            // TODO uncomment below to create an instance of AuctionEntryExpanded
            //instance = new AuctionEntryExpanded();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuctionEntryExpanded
        /// </summary>
        [Fact]
        public void AuctionEntryExpandedInstanceTest()
        {
            // TODO uncomment below to test "IsType" AuctionEntryExpanded
            //Assert.IsType<AuctionEntryExpanded>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'MinimalReputation'
        /// </summary>
        [Fact]
        public void MinimalReputationTest()
        {
            // TODO unit test for the property 'MinimalReputation'
        }
        /// <summary>
        /// Test the property 'Winner'
        /// </summary>
        [Fact]
        public void WinnerTest()
        {
            // TODO unit test for the property 'Winner'
        }
        /// <summary>
        /// Test the property 'Private'
        /// </summary>
        [Fact]
        public void PrivateTest()
        {
            // TODO unit test for the property 'Private'
        }
        /// <summary>
        /// Test the property 'Visible'
        /// </summary>
        [Fact]
        public void VisibleTest()
        {
            // TODO unit test for the property 'Visible'
        }
        /// <summary>
        /// Test the property 'NoteRaw'
        /// </summary>
        [Fact]
        public void NoteRawTest()
        {
            // TODO unit test for the property 'NoteRaw'
        }
        /// <summary>
        /// Test the property 'Note'
        /// </summary>
        [Fact]
        public void NoteTest()
        {
            // TODO unit test for the property 'Note'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Fact]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'StartingPrice'
        /// </summary>
        [Fact]
        public void StartingPriceTest()
        {
            // TODO unit test for the property 'StartingPrice'
        }
        /// <summary>
        /// Test the property 'BuyoutPrice'
        /// </summary>
        [Fact]
        public void BuyoutPriceTest()
        {
            // TODO unit test for the property 'BuyoutPrice'
        }
        /// <summary>
        /// Test the property 'MinimalIncrement'
        /// </summary>
        [Fact]
        public void MinimalIncrementTest()
        {
            // TODO unit test for the property 'MinimalIncrement'
        }
        /// <summary>
        /// Test the property 'IsDirectSell'
        /// </summary>
        [Fact]
        public void IsDirectSellTest()
        {
            // TODO unit test for the property 'IsDirectSell'
        }
        /// <summary>
        /// Test the property 'TopBid'
        /// </summary>
        [Fact]
        public void TopBidTest()
        {
            // TODO unit test for the property 'TopBid'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Updated'
        /// </summary>
        [Fact]
        public void UpdatedTest()
        {
            // TODO unit test for the property 'Updated'
        }
        /// <summary>
        /// Test the property 'Platform'
        /// </summary>
        [Fact]
        public void PlatformTest()
        {
            // TODO unit test for the property 'Platform'
        }
        /// <summary>
        /// Test the property 'Closed'
        /// </summary>
        [Fact]
        public void ClosedTest()
        {
            // TODO unit test for the property 'Closed'
        }
        /// <summary>
        /// Test the property 'IsMarkedFor'
        /// </summary>
        [Fact]
        public void IsMarkedForTest()
        {
            // TODO unit test for the property 'IsMarkedFor'
        }
        /// <summary>
        /// Test the property 'MarkedOperationAt'
        /// </summary>
        [Fact]
        public void MarkedOperationAtTest()
        {
            // TODO unit test for the property 'MarkedOperationAt'
        }
        /// <summary>
        /// Test the property 'Item'
        /// </summary>
        [Fact]
        public void ItemTest()
        {
            // TODO unit test for the property 'Item'
        }

    }

}
