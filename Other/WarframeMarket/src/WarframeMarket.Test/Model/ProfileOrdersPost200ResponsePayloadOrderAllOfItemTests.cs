/*
 * Warframe.market API
 *
 * ## Documentation is under very slow and heavy development  This document will gradually be supplemented and updated over some extended period of time.  ## Unstable endpoints Endpoint that is not stable and probably will be changed in the future will be marked with exclamation sign -> âš  
 *
 * The version of the OpenAPI document: 1.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using WarframeMarket.Model;
using WarframeMarket.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace WarframeMarket.Test.Model
{
    /// <summary>
    ///  Class for testing ProfileOrdersPost200ResponsePayloadOrderAllOfItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProfileOrdersPost200ResponsePayloadOrderAllOfItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProfileOrdersPost200ResponsePayloadOrderAllOfItem
        //private ProfileOrdersPost200ResponsePayloadOrderAllOfItem instance;

        public ProfileOrdersPost200ResponsePayloadOrderAllOfItemTests()
        {
            // TODO uncomment below to create an instance of ProfileOrdersPost200ResponsePayloadOrderAllOfItem
            //instance = new ProfileOrdersPost200ResponsePayloadOrderAllOfItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProfileOrdersPost200ResponsePayloadOrderAllOfItem
        /// </summary>
        [Fact]
        public void ProfileOrdersPost200ResponsePayloadOrderAllOfItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProfileOrdersPost200ResponsePayloadOrderAllOfItem
            //Assert.IsType<ProfileOrdersPost200ResponsePayloadOrderAllOfItem>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'UrlName'
        /// </summary>
        [Fact]
        public void UrlNameTest()
        {
            // TODO unit test for the property 'UrlName'
        }
        /// <summary>
        /// Test the property 'Icon'
        /// </summary>
        [Fact]
        public void IconTest()
        {
            // TODO unit test for the property 'Icon'
        }
        /// <summary>
        /// Test the property 'IconFormat'
        /// </summary>
        [Fact]
        public void IconFormatTest()
        {
            // TODO unit test for the property 'IconFormat'
        }
        /// <summary>
        /// Test the property 'Thumb'
        /// </summary>
        [Fact]
        public void ThumbTest()
        {
            // TODO unit test for the property 'Thumb'
        }
        /// <summary>
        /// Test the property 'SubIcon'
        /// </summary>
        [Fact]
        public void SubIconTest()
        {
            // TODO unit test for the property 'SubIcon'
        }
        /// <summary>
        /// Test the property 'ModMaxRank'
        /// </summary>
        [Fact]
        public void ModMaxRankTest()
        {
            // TODO unit test for the property 'ModMaxRank'
        }
        /// <summary>
        /// Test the property 'Subtypes'
        /// </summary>
        [Fact]
        public void SubtypesTest()
        {
            // TODO unit test for the property 'Subtypes'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'Ducats'
        /// </summary>
        [Fact]
        public void DucatsTest()
        {
            // TODO unit test for the property 'Ducats'
        }
        /// <summary>
        /// Test the property 'QuantityForSet'
        /// </summary>
        [Fact]
        public void QuantityForSetTest()
        {
            // TODO unit test for the property 'QuantityForSet'
        }
        /// <summary>
        /// Test the property 'En'
        /// </summary>
        [Fact]
        public void EnTest()
        {
            // TODO unit test for the property 'En'
        }
        /// <summary>
        /// Test the property 'Ru'
        /// </summary>
        [Fact]
        public void RuTest()
        {
            // TODO unit test for the property 'Ru'
        }
        /// <summary>
        /// Test the property 'Ko'
        /// </summary>
        [Fact]
        public void KoTest()
        {
            // TODO unit test for the property 'Ko'
        }
        /// <summary>
        /// Test the property 'Fr'
        /// </summary>
        [Fact]
        public void FrTest()
        {
            // TODO unit test for the property 'Fr'
        }
        /// <summary>
        /// Test the property 'De'
        /// </summary>
        [Fact]
        public void DeTest()
        {
            // TODO unit test for the property 'De'
        }
        /// <summary>
        /// Test the property 'Sv'
        /// </summary>
        [Fact]
        public void SvTest()
        {
            // TODO unit test for the property 'Sv'
        }
        /// <summary>
        /// Test the property 'ZhHant'
        /// </summary>
        [Fact]
        public void ZhHantTest()
        {
            // TODO unit test for the property 'ZhHant'
        }
        /// <summary>
        /// Test the property 'ZhHans'
        /// </summary>
        [Fact]
        public void ZhHansTest()
        {
            // TODO unit test for the property 'ZhHans'
        }
        /// <summary>
        /// Test the property 'Pt'
        /// </summary>
        [Fact]
        public void PtTest()
        {
            // TODO unit test for the property 'Pt'
        }
        /// <summary>
        /// Test the property 'Es'
        /// </summary>
        [Fact]
        public void EsTest()
        {
            // TODO unit test for the property 'Es'
        }
        /// <summary>
        /// Test the property 'Pl'
        /// </summary>
        [Fact]
        public void PlTest()
        {
            // TODO unit test for the property 'Pl'
        }

    }

}
